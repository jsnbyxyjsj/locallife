import { IObject, ILeafData, ILeaf } from '@leafer/interface';

declare const DataHelper: {
    default<T>(t: T, defaultData: IObject): T;
    assign(t: IObject, merge: IObject): void;
    copyAttrs(t: IObject, from: IObject, include: string[]): IObject;
    clone(data: unknown): IObject;
};

declare class LeafData implements ILeafData {
    __leaf: ILeaf;
    __input: IObject;
    __middle: IObject;
    __single: boolean;
    __naturalWidth?: number;
    __naturalHeight?: number;
    constructor(leaf: ILeaf);
    __get(name: string): any;
    __setInput(name: string, value: any): void;
    __getInput(name: string): any;
    __removeInput(name: string): void;
    __getInputData(): IObject;
    __setMiddle(name: string, value: any): void;
    __getMiddle(name: string): any;
    __checkSingle(): void;
    destroy(): void;
}

export { DataHelper, LeafData };
