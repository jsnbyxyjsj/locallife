import { ILayouter, ILeaf, ILayoutBlockData, ILayouterConfig, ILeafList, IEventListenerId } from '@leafer/interface';
import { LeafLevelList, WatchEvent } from '@leafer/core';

declare class Layouter implements ILayouter {
    target: ILeaf;
    layoutedBlocks: ILayoutBlockData[];
    totalTimes: number;
    times: number;
    disabled: boolean;
    running: boolean;
    layouting: boolean;
    waitAgain: boolean;
    config: ILayouterConfig;
    protected __updatedList: ILeafList;
    protected __levelList: LeafLevelList;
    protected __eventIds: IEventListenerId[];
    constructor(target: ILeaf, userConfig?: ILayouterConfig);
    start(): void;
    stop(): void;
    disable(): void;
    layout(): void;
    layoutAgain(): void;
    layoutOnce(): void;
    partLayout(): void;
    fullLayout(): void;
    static fullLayout(target: ILeaf): void;
    createBlock(data: ILeafList | ILeaf[]): ILayoutBlockData;
    getBlocks(list: ILeafList): ILayoutBlockData[];
    addBlocks(current: ILayoutBlockData[]): void;
    protected __onReceiveWatchData(event: WatchEvent): void;
    protected __listenEvents(): void;
    protected __removeListenEvents(): void;
    destroy(): void;
}

export { Layouter };
