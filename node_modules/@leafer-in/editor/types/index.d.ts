import { IUI, IPolygon, IEventListenerId, IGroupInputData, IResizeType, IAround, IDragEvent, IBoundsData, IPointData } from '@leafer-ui/interface';
import { IEditor, IEditorConfig, IEditorTool, IDirection8, IEditorResizeEvent, IEditorRotateEvent } from '@leafer-in/interface';
import { Group, DragEvent, RotateEvent, Event } from '@leafer-ui/core';

declare class Editor extends Group implements IEditor {
    config: IEditorConfig;
    resizePoints: IUI[];
    rotatePoints: IUI[];
    resizeLines: IUI[];
    targetRect: IUI;
    rect: IPolygon;
    circle: IUI;
    tool: IEditorTool;
    private _target;
    get target(): IUI;
    set target(value: IUI);
    enterPoint: IUI;
    protected __eventIds: IEventListenerId[];
    protected __targetEventIds: IEventListenerId[];
    constructor(userConfig?: IEditorConfig, data?: IGroupInputData);
    protected init(): void;
    protected onTarget(): void;
    getTool(value: IUI): IEditorTool;
    update(): void;
    protected onDrag(e: DragEvent): void;
    protected onMove(e: DragEvent): void;
    protected onRotate(e: DragEvent | RotateEvent): void;
    onResize(e: DragEvent): void;
    updateMoveCursor(): void;
    protected __listenEvents(): void;
    protected __removeListenEvents(): void;
    protected __listenPointEvents(point: IUI, type: 'rotate' | 'resize', direction: IDirection8): void;
    protected __listenTargetEvents(): void;
    protected __removeTargetEvents(): void;
    destroy(): void;
}

declare class EditorResizeEvent extends Event implements IEditorResizeEvent {
    static RESIZE: string;
    readonly target: IUI;
    readonly editor: IEditor;
    readonly resizeType: IResizeType;
    readonly lockRatio: boolean;
    readonly around: IAround;
    readonly dragEvent: IDragEvent;
    readonly direction: IDirection8;
    readonly bounds: IBoundsData;
    readonly old: IBoundsData;
    readonly origin: IPointData;
    readonly scaleX: number;
    readonly scaleY: number;
    constructor(type: string, data?: IEditorResizeEvent);
}

declare class EditorRotateEvent extends Event implements IEditorRotateEvent {
    static ROTATE: string;
    readonly target: IUI;
    readonly editor: IEditor;
    readonly origin: IPointData;
    readonly rotation: number;
    constructor(type: string, data?: IEditorRotateEvent);
}

declare const LineTool: IEditorTool;

declare const RectTool: IEditorTool;

export { Editor, EditorResizeEvent, EditorRotateEvent, LineTool, RectTool };
